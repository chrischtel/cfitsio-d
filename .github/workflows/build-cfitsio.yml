name: Build and Release CFITSIO Binaries

on:
  workflow_dispatch:
    inputs:
      cfitsio_version:
        description: 'CFITSIO version (e.g. 4.4.0)'
        required: true
        default: '4.4.0'
      release_tag:
        description: 'Release tag (e.g. v4.4.0)'
        required: true
        default: 'v4.4.0'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y wget build-essential cmake

      - name: Download CFITSIO
        run: |
            wget https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-${{ github.event.inputs.cfitsio_version }}.tar.gz -O cfitsio.tar.gz
            tar xzf cfitsio.tar.gz
            mv cfitsio-* cfitsio

      - name: Build CFITSIO
        run: |
          cd cfitsio
          ./configure --prefix=$PWD/../cfitsio-install
          make -j$(nproc)
          make install

      - name: Package binaries
        run: |
          cd cfitsio-install/lib
          tar czf ../../linux-x86_64.tar.gz libcfitsio.so*
          cd ../../

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86_64
          path: linux-x86_64.tar.gz

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Download CFITSIO
        run: |
          curl -L https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-${{ github.event.inputs.cfitsio_version }}.tar.gz -o cfitsio.tar.gz
          tar xzf cfitsio.tar.gz
          mv $(find . -maxdepth 1 -type d -name "cfitsio-*") cfitsio

      - name: Build CFITSIO
        run: |
          cd cfitsio
          ./configure --prefix=$PWD/../cfitsio-install
          make -j$(sysctl -n hw.ncpu)
          make install

      - name: Package binaries
        run: |
          cd cfitsio-install/lib
          tar czf ../../macos-x86_64.tar.gz libcfitsio.dylib*
          cd ../../

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-x86_64
          path: macos-x86_64.tar.gz

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Set up Python (for CMake)
        uses: actions/setup-python@v5
        with:
            python-version: '3.x'

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Download and extract zlib
        run: |
            curl -L https://zlib.net/zlib1213.zip -o zlib.zip
            tar -xf zlib.zip || powershell -Command "Expand-Archive -Path zlib.zip -DestinationPath ."
            ren zlib-* zlib

      - name: Build zlib
        run: |
            mkdir zlib_build
            cd zlib_build
            cmake ../zlib -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}\zlib_install
            cmake --build . --config Release
            cmake --install . --config Release

      - name: Download and extract CFITSIO
        run: |
            curl -L https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-${{ github.event.inputs.cfitsio_version }}.tar.gz -o cfitsio.tar.gz
            tar -xzf cfitsio.tar.gz
            ren cfitsio-* cfitsio

      - name: Build CFITSIO (DLL, Visual Studio)
        run: |
            mkdir cfitsio_build
            cd cfitsio_build
            cmake ../cfitsio -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}\cfitsio_install -DCMAKE_PREFIX_PATH=${{ github.workspace }}\zlib_install -DBUILD_SHARED_LIBS=ON -DUSE_CURL=OFF
            cmake --build . --config Release
            cmake --install . --config Release

      - name: Package binaries
        run: |
            cd cfitsio_install/bin
            powershell Compress-Archive -Path cfitsio.dll -DestinationPath ../../windows-x86_64.zip
            cd ../lib
            powershell Compress-Archive -Path cfitsio.lib -DestinationPath ../../windows-x86_64.zip -Update

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
            name: windows-x86_64
            path: windows-x86_64.zip

  release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          name: CFITSIO ${{ github.event.inputs.cfitsio_version }} Binaries
          body: |
            Prebuilt CFITSIO binaries for use with cfitsio-d.
            - Linux: `linux-x86_64.tar.gz`
            - macOS: `macos-x86_64.tar.gz`
            - Windows: `windows-x86_64.zip`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          files: |
            artifacts/linux-x86_64/linux-x86_64.tar.gz
            artifacts/macos-x86_64/macos-x86_64.tar.gz
            artifacts/windows-x86_64/windows-x86_64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
